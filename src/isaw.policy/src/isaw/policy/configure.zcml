<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    i18n_domain="isaw.policy">

  <five:registerPackage package="." initialize=".initialize" />

  <includeDependencies package="." />

  <!-- These two need to be included explicitly for some reason: -->
  <include package="Products.CMFPlacefulWorkflow" />
  <include package="plone.app.iterate" />

  <include file="profile.zcml" />
  <!-- -*- extra stuff goes here -*- -->

  <adapter
      name="isaw.policy.event_extender"
      factory=".events.ISAWEventExtender"
      provides="archetypes.schemaextender.interfaces.ISchemaExtender"
      />

  <adapter
      name="isaw.policy.news_extender"
      factory=".news_extender.NewsItemExtender"
      provides="archetypes.schemaextender.interfaces.ISchemaExtender"
      />

  <browser:viewlet
      name="isaw.opengraph.metadata"
      template="metadata.pt"
      for="Products.CMFCore.interfaces.IDublinCore"
      manager="plone.app.layout.viewlets.interfaces.IHtmlHeadLinks"
      class=".metadata.OpenGraphTagViewlet"
      layer=".interfaces.IISAWPolicyLayer"
      permission="zope2.View"
      />

  <adapter
      factory=".purging.ImagePurgePaths"
      name="isaw.policy.baseimage" />

  <adapter
      for="Products.ATContentTypes.interfaces.IATNewsItem"
      factory=".purging.ImagePurgePaths"
      name="isaw.policy.baseimage" />

  <adapter
      factory=".purging.LeadimagePurgePaths"
      name="isaw.policy.leadimage" />

  <adapter
      for="Products.CMFCore.interfaces.IFolderish
           zope.publisher.interfaces.browser.IDefaultBrowserLayer
           plone.dexterity.interfaces.IDexterityFTI"
      provides="zope.publisher.interfaces.browser.IBrowserPage"
      factory=".interfaces.PublicationAddView"
      name="isaw.policy.publication"
      />
  <class class=".interfaces.PublicationAddView">
      <require
          permission="cmf.AddPortalContent"
          interface="zope.publisher.interfaces.browser.IBrowserPage"
          />
  </class>

  <permission
      id="plone.iterateCheckIn"
      title="iterate : Check in content"
      />

  <permission
      id="plone.iterateCheckOut"
      title="iterate : Check out content"
      />

  <configure package="plone.app.iterate.browser">
    <browser:page
        for="..interfaces.IIterateAware"
        name="content-checkin"
        class=".checkin.Checkin"
        template="checkin.pt"
        layer="isaw.policy.interfaces.IISAWPolicyLayer"
        permission="plone.iterateCheckOut"
        />
  </configure>

  <browser:page
      for="*"
      name="iterate_control"
      class=".iterate.ISAWIterateControl"
      layer="isaw.policy.interfaces.IISAWPolicyLayer"
      permission="zope2.View"
      allowed_attributes="checkin_allowed checkout_allowed cancel_allowed"
      />

  <browser:page
      for="Products.CMFPlone.interfaces.IPloneSiteRoot"
      name="setup-saml2"
      class=".browser.SetupSAML2"
      permission="cmf.ManagePortal"
      layer="isaw.policy.interfaces.IISAWPolicyLayer"
      />

  <!-- Register types that have lead images as supporting cropping -->
  <configure zcml:condition="installed plone.app.imagecropping">
    <class class="Products.ATContentTypes.content.topic.ATTopic">
      <implements interface="plone.app.imagecropping.at.IImageCroppingAT" />
    </class>

    <class class="plone.app.folder.folder.ATFolder">
      <implements interface="plone.app.imagecropping.at.IImageCroppingAT" />
    </class>

    <class class="Products.ATContentTypes.content.document.ATDocument">
      <implements interface="plone.app.imagecropping.at.IImageCroppingAT" />
    </class>

    <class class="Products.ATContentTypes.content.event.ATEvent">
      <implements interface="plone.app.imagecropping.at.IImageCroppingAT" />
    </class>

  </configure>

  <!-- Register types for geolocation -->
  <configure zcml:condition="installed Products.Maps">

    <plone:behavior
      title="Geolocatable"
      description="Add geographic locations to content items."
      provides=".map_extender.IGeolocationBehavior"
      for="plone.dexterity.interfaces.IDexterityContent" />

    <class class="Products.ATContentTypes.content.document.ATDocument">
      <implements interface=".map_extender.IGeolocatable" />
    </class>
    <class class="Products.ATContentTypes.content.event.ATEvent">
      <implements interface=".map_extender.IGeolocatable" />
    </class>
    <class class="Products.ATContentTypes.content.newsitem.ATNewsItem">
      <implements interface=".map_extender.IGeolocatable" />
    </class>

    <adapter factory=".map_extender.LocationMarker"
             provides="Products.Maps.interfaces.marker.IRichMarker" />
    <adapter factory=".map_extender.LocationMarker"
             for=".map_extender.IGeolocationBehavior"
             provides="Products.Maps.interfaces.marker.IRichMarker" />
    <adapter factory=".map_extender.LocationMarker"
             for=".map_extender.ILocation"
             provides="Products.Maps.interfaces.marker.IRichMarker" />
    <class class=".map_extender.LocationMarker">
      <allow interface="Products.Maps.interfaces.marker.IRichMarker" />
    </class>
    <adapter
      for=".map_extender.ILocation"
      provides="Products.Maps.interfaces.map.IMap"
      factory="Products.Maps.adapters.ContextMap"
      />
    <adapter
      name="isaw.policy.maps"
      for=".map_extender.IGeolocatable"
      factory=".map_extender.MapSchemaExtender"
      provides="archetypes.schemaextender.interfaces.ISchemaExtender" />

    <browser:page
      for=".map_extender.IGeolocatable"
      name="maps_googlemaps_view"
      class="Products.Maps.browser.map.DefaultMapView"
      permission="zope2.View"
      allowed_interface="Products.Maps.interfaces.map.IMapView"
      />
    <browser:page
      for=".map_extender.IGeolocationBehavior"
      name="maps_googlemaps_view"
      class="Products.Maps.browser.map.DefaultMapView"
      permission="zope2.View"
      allowed_interface="Products.Maps.interfaces.map.IMapView"
      />
    <browser:page
      for=".map_extender.ILocation"
      name="maps_googlemaps_view"
      class="Products.Maps.browser.map.DefaultMapView"
      permission="zope2.View"
      allowed_interface="Products.Maps.interfaces.map.IMapView"
      />
    <browser:page
      for=".map_extender.IGeolocatable"
      name="maps_googlemaps_enabled_view"
      class="Products.Maps.browser.map.DefaultMapView"
      permission="zope.Public"
      allowed_interface="Products.Maps.interfaces.map.IMapEnabledView"
      />
    <browser:page
      for=".map_extender.IGeolocationBehavior"
      name="maps_googlemaps_enabled_view"
      class="Products.Maps.browser.map.DefaultMapView"
      permission="zope.Public"
      allowed_interface="Products.Maps.interfaces.map.IMapEnabledView"
      />
    <browser:page
      for=".map_extender.ILocation"
      name="maps_googlemaps_enabled_view"
      class="Products.Maps.browser.map.DefaultMapView"
      permission="zope.Public"
      allowed_interface="Products.Maps.interfaces.map.IMapEnabledView"
      />

  </configure>

</configure>
